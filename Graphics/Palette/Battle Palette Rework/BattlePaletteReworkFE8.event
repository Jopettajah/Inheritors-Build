/*
Battle palette rework, by hypergammaspaces

Implements custom palettes as a list of members that can be in each class.

A .nmm is included to generate a table linking each class to this list of palettes (a pre-generated CSV is also included).
*/

#define EXPAND_PALETTE_TABLE False
#include "Extensions/Hack Installation.txt"

#ifdef EXPAND_PALETTE_TABLE
	ALIGN 4
	//This is a list of palette pointers by ID. It can be expanded as needed.
	BattlePaletteDictionary:
	#include "BattlePaletteDictionary.event"
#else
	//If you don't plan on having more than 255 palettes you can just use the vanilla dictionary.
	#define BattlePaletteDictionary $08EF8008
#endif

PUSH
	ORG $5742C
	callHack_r7(PaletteLoadReworkPt2)
	
	ORG $5746A
	ALIGN 4
	callHack_r7(PaletteLoadReworkPt1)

	ORG $59BFC
	POIN BattlePaletteDictionary
	
	ORG $CD108
	callHack_r5(PaletteLoadReworkPromoBranch)
POP

ALIGN 4
PaletteLoadReworkPt1:
#incbin "PaletteLoadReworkPart1.dmp"
POIN MapClassIdToPalettes
POIN BattlePaletteDictionary
ALIGN 4

PaletteLoadReworkPt2:
#incbin "PaletteLoadReworkPart2.dmp"
POIN MapClassIdToPalettes
POIN BattlePaletteDictionary
ALIGN 4

PaletteLoadReworkPromoBranch:
#incbin "PaletteLoadReworkPromoBranch.dmp"
POIN MapClassIdToPalettes
POIN BattlePaletteDictionary
ALIGN 4

ALIGN 4
#include "ClassPaletteList.event" //list of which palettes in the dictionary map to which classes
ALIGN 4
#include "PaletteViewerTables.event" //convenience table for looking at palettes in builder

